<apex:component controller="IdeaVoteController" allowDml="true">
    <apex:attribute name="idea" type="Idea" assignTo="{!conIdea}" required="true" description="The Idea object to vote on." />
    <apex:attribute name="howUserVoted" type="String" assignTo="{!currentUserVoteType}" required="true" description="Identifies how the user voted on the idea. If Up, the user promoted the idea. If Down, the user demoted the idea.  If None, the user has not voted on the idea." />
    <apex:attribute name="rerender" description="The area(s) of the page that are to be refreshed upon the action invocation." type="String"/>

    <apex:actionRegion renderRegionOnly="true" immediate="true">
        <apex:outputPanel layout="block" styleClass="baseVoteContainer">
    
            <!-- Animation effect JS, prototype.js/effects.js -->
            <apex:includeScript value="{!URLFOR($Resource.idea_js,'all_min.js')}"/>
    
            <apex:outputPanel rendered="{!!idea.IsLocked}" layout="block" id="baseVoteButton">
                <apex:outputPanel layout="block" id="xbaseVoteStatusBlock" styleClass="votesDiv">
                    <span style="display:none"><apex:pageMessages id="errorMsgs" rendered="true"/></span> 
                </apex:outputPanel>
    
                <apex:outputPanel rendered="{!!idea.IsLocked}" layout="block" id="baseVoteButtonRerender" styleClass="promoteDemoteDiv">
                    <!--IMPORTANT: on rerender, all controller properties in formulas in apex components have a null/false -->
                    <!--value (see bug 196573).  formulas are thus written assuming that all properties SHOULD have null/false -->
                    <!--values after rerender.  the below div is the one case where i couldn't get around it, so i'm using a div. -->
            <div id="baseVoteStyle" class="{!IF(!userHasNotVoted, IF(currentUserVoteType = 'Up', 'baseVotedButton baseVotedUpButton', 'baseVotedButton baseVotedDownButton'), 'baseVoteButton')}">
                        <!-- Pure guest user to a portal -->
                        <apex:outputLink rendered="{!!isLoggedIn}" value="{!loginPage.url}" styleClass="voteButton voteUpButton" id="GuestVoteUpLink"
                            onmouseover="return setVoteStatusMsg('Click to promote')" onmouseout="return setVoteStatusMsg('');"
                            title="Click to promote">
                            &nbsp;
                        </apex:outputLink>
                        <apex:outputLink rendered="{!!isLoggedIn}" value="{!loginPage.url}" styleClass="voteButton voteDownButton"
                            onmouseover="return setVoteStatusMsg('Click to demote')" onmouseout="return setVoteStatusMsg('');"
                            title="Click to demote">
                            &nbsp;
                        </apex:outputLink>
    
                        <!-- A login user who hasn't voted -->
                        <apex:commandLink rendered="{!(isLoggedIn && userHasNotVoted)}" styleClass="voteButton voteUpButton" id="VoteUpLink" action="{!createVote}"
                            rerender="baseVoteButtonRerender,baseVoteStatusBlock,{!rerender}"
                            title="Click to promote"
                            onClick="animateVoteButton(['{!$Component.VoteUpLink}', '{!$Component.VoteDownLink}'], '{!$Component.floater}', '{!$Component.voteButton}', '10', 'Up', ['{!$Component.votedButtonLabelUp}'], '{!$Component.baseVoteStatusBlock}', '{!$Component.baseVoteButtonRerender}');"
                            onmouseover="return setVoteStatusMsg('Click to promote')" onmouseout="return setVoteStatusMsg('');">
                            <apex:param name="firstParam" assignTo="{!newVoteType}" value="Up" />
                            <apex:param name="secondParam" assignTo="{!voteIdeaId}" value="{!idea.id}" />
                        </apex:commandLink>
                        <apex:commandLink rendered="{!(isLoggedIn && userHasNotVoted)}" styleClass="voteButton voteDownButton" id="VoteDownLink" action="{!createVote}"
                            rerender="baseVoteButtonRerender,baseVoteStatusBlock,{!rerender}"
                            title="Click to demote"
                            onClick="animateVoteButton(['{!$Component.VoteUpLink}', '{!$Component.VoteDownLink}'], '{!$Component.floater}', '{!$Component.voteButton}', '10', 'Down', ['{!$Component.votedButtonLabelDown}'], '{!$Component.baseVoteStatusBlock}', '{!$Component.baseVoteButtonRerender}');"
                            onmouseover="return setVoteStatusMsg('Click to demote')" onmouseout="return setVoteStatusMsg('');">
                            <apex:param name="firstParam" assignTo="{!newVoteType}" value="Down" />
                            <apex:param name="secondParam" assignTo="{!voteIdeaId}" value="{!idea.id}" />
                        </apex:commandLink>
    
                        <!-- A login user who has voted -->
                        <apex:outputPanel rendered="{!isLoggedIn}" id="votedButtonLabelUp" layout="block" styleClass="voteButton votedUpButton" style="{!IF(userHasNotVoted, 'display:none', '')}">
                            &nbsp; </apex:outputPanel><apex:outputPanel rendered="{!isLoggedIn}" id="votedButtonLabelDown" layout="block" styleClass="voteButton votedDownButton" style="{!IF(userHasNotVoted, 'display:none', '')}">
                            &nbsp;
                        </apex:outputPanel>
                    </div>
    
                </apex:outputPanel>

                <apex:outputPanel layout="block" id="baseVoteStatusBlock" styleClass="voteTotal"><apex:outputPanel layout="block" styleClass="value">{!voteTotal}</apex:outputPanel><apex:outputPanel layout="block" styleClass="ibtProfileVoteTotalLabel">Points</apex:outputPanel></apex:outputPanel>
    
                <apex:outputPanel rendered="{!(isLoggedIn && userHasNotVoted)}" id="floater" styleClass="baseVoteScoreFloater" style="visibility: hidden;">+10</apex:outputPanel>
            </apex:outputPanel>
    
            <apex:outputPanel rendered="{!idea.IsLocked}" layout="block" styleClass="baseMergedIdeaVoteButton">
            Merged
            </apex:outputPanel>
    
        </apex:outputPanel>
    </apex:actionRegion>
</apex:component>